###########################################################
#  Name: Sarnesh Arulnathan
#  Description: Creates an array filled with integers from user input, and makes changes to array as specified by code
###########################################################  
#data declarations: declare variable names used in program, storage allocated in RAM
                            .data  
numbers:     .space 44
zero:        .word 0
msg1:        .asciiz "Specify how many numbers should be stored in the array (at most 11):\n" 	#create a string containing ""
msg2:        .asciiz "Enter an integer:\n"
msg3:        .asciiz "Specify how many times to repeat::\n"


#program code is contained below under .text 
                        .text
                        .globl    main   #define a global function main

# the program begins execution at main()
main:	
	    la    $a0, msg1            # $a0 = address of msg1
            li    $v0, 4               # $v0 = 4  --- this is to call print_string()
            syscall
            li    $v0, 5	       # grabs user input
	    syscall
            move  $s0, $v0	       #sets user input to temp reg $t0
	    slt   $t1, $s0, 12
	    beq   $t1, 1,  readArray
	    beq   $t1, 0, intro
	    #la    $s1, numbers
	    li    $t2, 1 
	 

	    intro: 

	    la    $a0, msg1            # $a0 = address of msg1
            li    $v0, 4               # $v0 = 4  --- this is to call print_string()
            syscall
            li    $v0, 5	       # grabs user input
	    syscall
   	    move  $s0, $v0	       #sets user input to temp reg $t0
	    
	    slt   $t1, $t0, 12
	    beq   $t1, 1,  readArray
	    beq   $t1, 0, intro   
	    
	   
	 
	
	    readArray:                 #label readArray
	   

	    beq   $t2, $s0, printArray #if the loop has run as many times as user wanted print og loop
	 
 	    la    $a0, msg2            # $a0 = address of msg1
            li    $v0, 4               # $v0 = 4  --- this is to call print_string()
            syscall
	    li    $v0, 5	       # gets user input
	    syscall
	    
	    
	    sw    $t3, numbers         #stores values into array
	    addi  $t2, $t2, 1          #adds counter for array
		
	    
            
	    j     readArray	        #jumps to beginning of loop
	
	    printArray:
            lw    $t3, numbers         #loads lloop
	    li    $v0, 1
	    move  $a0, $t3	        #moves it to $a0 to be printable
	    syscall

	    changeArrayContent:
	    
	    la    $a0, msg3            # $a0 = address of msg3
            li    $v0, 4               # $v0 = 4  --- this is to call print_string()
            syscall
            li    $v0, 5	       # grabs user input
	    syscall
            move  $s2, $v0
	    la    $a0, msg3            # $a0 = address of msg2
            li    $v0, 4               # $v0 = 4  --- this is to call print_string()
            syscall
            li    $v0, 5	       # grabs user input
	    syscall
            move  $s3, $v0

	   div  $t2, $t3, $t0
	   mflo $t3
           syscall


           
	    exit:                      #exits code
	    li    $v0, 10
	    syscall
